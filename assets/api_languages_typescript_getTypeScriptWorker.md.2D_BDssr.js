import{_ as s,c as i,I as a,j as e,a as r,a6 as p,o,D as l}from"./chunks/framework.CYBeC69b.js";const E=JSON.parse('{"title":"getTypeScriptWorker","description":"","frontmatter":{},"headers":[],"relativePath":"api/languages/typescript/getTypeScriptWorker.md","filePath":"api/languages/typescript/getTypeScriptWorker.md","lastUpdated":1720600766000}'),c={name:"api/languages/typescript/getTypeScriptWorker.md"},n=e("h1",{id:"gettypescriptworker",tabindex:"-1"},[r("getTypeScriptWorker "),e("a",{class:"header-anchor",href:"#gettypescriptworker","aria-label":'Permalink to "getTypeScriptWorker"'},"​")],-1),h=p('<details class="details custom-block"><summary>原文链接</summary><p><a href="https://microsoft.github.io/monaco-editor/docs.html#functions/languages.typescript.getTypeScriptWorker.html" target="_blank" rel="noreferrer">https://microsoft.github.io/monaco-editor/docs.html#functions/languages.typescript.getTypeScriptWorker.html</a></p></details><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getTypeScriptWorker</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(): </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Promise</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">uris</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Promise</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">TypeScriptWorker</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><h2 id="gettypescriptworker-1" tabindex="-1">getTypeScriptWorker <a class="header-anchor" href="#gettypescriptworker-1" aria-label="Permalink to &quot;getTypeScriptWorker&quot;">​</a></h2><ul><li>语法：<code>getTypeScriptWorker(): Promise&lt;((...uris) =&gt; Promise&lt;TypeScriptWorker&gt;)&gt;</code></li><li>返回值：<code>Promise&lt;((...uris) =&gt; Promise&lt;</code><a href="/api/languages/typescript/TypeScriptWorker.html">TypeScriptWorker</a><code>&gt;)&gt;</code></li></ul>',4);function k(g,d,y,m,u,_){const t=l("backTop");return o(),i("div",null,[n,a(t),h])}const S=s(c,[["render",k]]);export{E as __pageData,S as default};
