import{_ as e,c as t,D as a,a as n,N as r,a5 as l,J as o,o as h}from"./chunks/framework.DCUvzp74.js";import"./chunks/theme.G4trTUnd.js";const y=JSON.parse('{"title":"IJSONWorker","description":"","frontmatter":{},"headers":[],"relativePath":"api/languages/json/IJSONWorker.md","filePath":"api/languages/json/IJSONWorker.md","lastUpdated":1720600766000}'),c={name:"api/languages/json/IJSONWorker.md"};function p(k,s,d,g,m,u){const i=o("backTop");return h(),t("div",null,[s[0]||(s[0]=a("h1",{id:"ijsonworker",tabindex:"-1"},[n("IJSONWorker "),a("a",{class:"header-anchor",href:"#ijsonworker","aria-label":'Permalink to "IJSONWorker"'},"​")],-1)),r(i),s[1]||(s[1]=l(`<details class="details custom-block"><summary>原文链接</summary><p><a href="https://microsoft.github.io/monaco-editor/docs.html#interfaces/languages.json.IJSONWorker.html" target="_blank" rel="noreferrer">https://microsoft.github.io/monaco-editor/docs.html#interfaces/languages.json.IJSONWorker.html</a></p></details><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> IJSONWorker</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    getMatchingSchemas</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">uri</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Promise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MatchingSchema</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[]&gt;;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    parseJSONDocument</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">uri</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Promise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">JSONDocument</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="getmatchingschemas" tabindex="-1">getMatchingSchemas <a class="header-anchor" href="#getmatchingschemas" aria-label="Permalink to &quot;getMatchingSchemas&quot;">​</a></h2><ul><li>语法：<code>getMatchingSchemas(uri): Promise&lt;MatchingSchema[]&gt;</code></li><li>参数：<code>uri</code>：<code>string</code></li><li>返回值：<code>Promise&lt;</code><a href="/api/languages/json/MatchingSchema.html">MatchingSchema</a><code>&gt;</code></li></ul><h2 id="parsejsondocument" tabindex="-1">parseJSONDocument <a class="header-anchor" href="#parsejsondocument" aria-label="Permalink to &quot;parseJSONDocument&quot;">​</a></h2><ul><li>语法：<code>parseJSONDocument(uri): Promise&lt;JSONDocument&gt;</code></li><li>参数：<code>uri</code>：<code>string</code></li><li>返回值：<code>Promise&lt;</code><a href="/api/languages/json/JSONDocument.html">JSONDocument</a><code>&gt;</code></li></ul>`,6))])}const N=e(c,[["render",p]]);export{y as __pageData,N as default};
