import{_ as i,c as s,D as a,a as r,N as o,a5 as n,J as l,o as p}from"./chunks/framework.Blj2-Ajd.js";import"./chunks/theme.CmCrfLpF.js";const f=JSON.parse('{"title":"ICursorStateComputerData","description":"","frontmatter":{},"headers":[],"relativePath":"api/editor/ICursorStateComputerData.md","filePath":"api/editor/ICursorStateComputerData.md","lastUpdated":1720599564000}'),d={name:"api/editor/ICursorStateComputerData.md"};function h(c,t,k,u,m,g){const e=l("backTop");return p(),s("div",null,[t[0]||(t[0]=a("h1",{id:"icursorstatecomputerdata",tabindex:"-1"},[r("ICursorStateComputerData "),a("a",{class:"header-anchor",href:"#icursorstatecomputerdata","aria-label":'Permalink to "ICursorStateComputerData"'},"​")],-1)),o(e),t[1]||(t[1]=n(`<details class="details custom-block"><summary>原文链接</summary><p><a href="https://microsoft.github.io/monaco-editor/docs.html#interfaces/editor.ICursorStateComputerData.html" target="_blank" rel="noreferrer">https://microsoft.github.io/monaco-editor/docs.html#interfaces/editor.ICursorStateComputerData.html</a></p></details><p>用于在命令之后计算光标状态的助手。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ICursorStateComputerData</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    getInverseEditOperations</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> IValidEditOperation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[];</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    getTrackedSelection</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Selection</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="getinverseeditoperations" tabindex="-1">getInverseEditOperations <a class="header-anchor" href="#getinverseeditoperations" aria-label="Permalink to &quot;getInverseEditOperations&quot;">​</a></h2><ul><li>语法：<code>getInverseEditOperations(): IValidEditOperation[]</code></li><li>返回值：<a href="/api/editor/IValidEditOperation.html">IValidEditOperation</a>[]</li><li>描述：获取添加的编辑操作的反向编辑操作。</li></ul><h2 id="gettrackedselection" tabindex="-1">getTrackedSelection <a class="header-anchor" href="#gettrackedselection" aria-label="Permalink to &quot;getTrackedSelection&quot;">​</a></h2><ul><li>语法：<code>getTrackedSelection(id): Selection</code></li><li>参数：<code>id</code>: <code>string</code></li><li>返回值：<a href="/api/Selection.html">Selection</a></li><li>描述：获取跟踪的编辑操作。</li></ul>`,7))])}const y=i(d,[["render",h]]);export{f as __pageData,y as default};
