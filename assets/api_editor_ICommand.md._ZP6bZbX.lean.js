import{_ as e,c as t,D as a,a as l,N as o,a5 as r,J as n,o as d}from"./chunks/framework.Blj2-Ajd.js";import"./chunks/theme.CmCrfLpF.js";const y=JSON.parse('{"title":"ICommand","description":"","frontmatter":{},"headers":[],"relativePath":"api/editor/ICommand.md","filePath":"api/editor/ICommand.md","lastUpdated":1720599564000}'),p={name:"api/editor/ICommand.md"};function h(k,i,m,c,E,u){const s=n("backTop");return d(),t("div",null,[i[0]||(i[0]=a("h1",{id:"icommand",tabindex:"-1"},[l("ICommand "),a("a",{class:"header-anchor",href:"#icommand","aria-label":'Permalink to "ICommand"'},"​")],-1)),o(s),i[1]||(i[1]=r(`<details class="details custom-block"><summary>原文链接</summary><p><a href="https://microsoft.github.io/monaco-editor/docs.html#interfaces/editor.ICommand.html" target="_blank" rel="noreferrer">https://microsoft.github.io/monaco-editor/docs.html#interfaces/editor.ICommand.html</a></p></details><p>用于修改模型上的文本/光标状态的命令。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ICommand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    computeCursorState</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">model</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">helper</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Selection</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    getEditOperations</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">model</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">builder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="computecursorstate" tabindex="-1">computeCursorState <a class="header-anchor" href="#computecursorstate" aria-label="Permalink to &quot;computeCursorState&quot;">​</a></h2><ul><li>语法：<code>computeCursorState(model, helper): Selection</code></li><li>参数： <ul><li><code>model</code>: <a href="/api/editor/ITextModel.html">ITextModel</a></li><li><code>helper</code>: <a href="/api/editor/ICursorStateComputerData.html">ICursorStateComputerData</a>\`</li></ul></li><li>描述：用于获取反向编辑操作和获取先前跟踪的选择的辅助对象。</li></ul><h2 id="geteditoperations" tabindex="-1">getEditOperations <a class="header-anchor" href="#geteditoperations" aria-label="Permalink to &quot;getEditOperations&quot;">​</a></h2><ul><li>语法：<code>getEditOperations(model, builder): void</code></li><li>参数： <ul><li><code>model</code>: <a href="/api/editor/ITextModel.html">ITextModel</a></li><li><code>builder</code>: <a href="/api/editor/IEditOperationBuilder.html">IEditOperationBuilder</a></li></ul></li><li>描述：用于收集所需编辑操作和跟踪选择的助手。</li></ul>`,7))])}const f=e(p,[["render",h]]);export{y as __pageData,f as default};
