import{_ as a,c as t,D as s,a as n,N as l,a5 as o,J as r,o as h}from"./chunks/framework.DCUvzp74.js";import"./chunks/theme.G4trTUnd.js";const y=JSON.parse('{"title":"IContentWidget","description":"","frontmatter":{},"headers":[],"relativePath":"api/editor/IContentWidget.md","filePath":"api/editor/IContentWidget.md","lastUpdated":1720599564000}'),d={name:"api/editor/IContentWidget.md"};function p(k,i,g,c,E,u){const e=r("backTop");return h(),t("div",null,[i[0]||(i[0]=s("h1",{id:"icontentwidget",tabindex:"-1"},[n("IContentWidget "),s("a",{class:"header-anchor",href:"#icontentwidget","aria-label":'Permalink to "IContentWidget"'},"​")],-1)),l(e),i[1]||(i[1]=o(`<details class="details custom-block"><summary>原文链接</summary><p><a href="https://microsoft.github.io/monaco-editor/docs.html#interfaces/editor.IContentWidget.html" target="_blank" rel="noreferrer">https://microsoft.github.io/monaco-editor/docs.html#interfaces/editor.IContentWidget.html</a></p></details><p>内容小部件与文本内联呈现，并且可以很容易地放置在编辑器位置的“附近”。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> IContentWidget</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    allowEditorOverflow</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    suppressMouseDown</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    afterRender</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">position</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    beforeRender</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> IDimension</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    getDomNode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HTMLElement</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    getId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    getPosition</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> IContentWidgetPosition</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="alloweditoroverflow" tabindex="-1">allowEditorOverflow <a class="header-anchor" href="#alloweditoroverflow" aria-label="Permalink to &quot;allowEditorOverflow&quot;">​</a></h2><ul><li>类型: <code>boolean</code></li><li>描述：在可能溢出编辑器的视图dom节点的位置渲染此内容小部件。</li></ul><h2 id="suppressmousedown" tabindex="-1">suppressMouseDown <a class="header-anchor" href="#suppressmousedown" aria-label="Permalink to &quot;suppressMouseDown&quot;">​</a></h2><ul><li>类型: <code>boolean</code></li><li>描述：如果为true，则阻止内容小部件处理鼠标点击。</li></ul><h2 id="afterrender" tabindex="-1">afterRender <a class="header-anchor" href="#afterrender" aria-label="Permalink to &quot;afterRender&quot;">​</a></h2><ul><li>语法：<code>afterRender(position): void</code></li><li>参数：<code>position</code>: <a href="/api/editor/ContentWidgetPositionPreference.html">ContentWidgetPositionPreference</a></li><li>描述：呈现内容小部件后调用的可选函数。使用选定的位置首选项调用，如果未渲染，则为null。</li></ul><h2 id="beforerender" tabindex="-1">beforeRender <a class="header-anchor" href="#beforerender" aria-label="Permalink to &quot;beforeRender&quot;">​</a></h2><ul><li>语法：<code>beforeRender(): IDimension</code></li><li>返回值: <a href="/api/editor/IDimension.html">IDimension</a></li><li>描述：在呈现内容小部件之前调用的可选函数。如果返回一个维度，编辑器将尝试使用它。</li></ul><h2 id="getdomnode" tabindex="-1">getDomNode <a class="header-anchor" href="#getdomnode" aria-label="Permalink to &quot;getDomNode&quot;">​</a></h2><ul><li>语法：<code>getDomNode(): HTMLElement</code></li><li>返回值: <code>HTMLElement</code></li><li>描述：返回内容小部件的dom节点。</li></ul><h2 id="getid" tabindex="-1">getId <a class="header-anchor" href="#getid" aria-label="Permalink to &quot;getId&quot;">​</a></h2><ul><li>语法：<code>getId(): string</code></li><li>返回值: <code>string</code></li><li>描述：返回内容小部件的id。</li></ul><h2 id="getposition" tabindex="-1">getPosition <a class="header-anchor" href="#getposition" aria-label="Permalink to &quot;getPosition&quot;">​</a></h2><ul><li>语法：<code>getPosition(): IContentWidgetPosition</code></li><li>返回值: <a href="/api/editor/IContentWidgetPosition.html">IContentWidgetPosition</a></li><li>描述：获取内容小部件的位置。如果返回null，则内容小部件将被置于屏幕外。</li></ul>`,17))])}const F=a(d,[["render",p]]);export{y as __pageData,F as default};
