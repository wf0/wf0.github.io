import{_ as i,c as a,I as o,j as t,a as e,a6 as n,o as r,D as l}from"./chunks/framework.CYBeC69b.js";const D=JSON.parse('{"title":"IDropIntoEditorOptions","description":"","frontmatter":{},"headers":[],"relativePath":"api/editor/IDropIntoEditorOptions.md","filePath":"api/editor/IDropIntoEditorOptions.md","lastUpdated":1720599564000}'),p={name:"api/editor/IDropIntoEditorOptions.md"},d=t("h1",{id:"idropintoeditoroptions",tabindex:"-1"},[e("IDropIntoEditorOptions "),t("a",{class:"header-anchor",href:"#idropintoeditoroptions","aria-label":'Permalink to "IDropIntoEditorOptions"'},"​")],-1),h=n(`<details class="details custom-block"><summary>原文链接</summary><p><a href="https://microsoft.github.io/monaco-editor/docs.html#interfaces/editor.IDropIntoEditorOptions.html" target="_blank" rel="noreferrer">https://microsoft.github.io/monaco-editor/docs.html#interfaces/editor.IDropIntoEditorOptions.html</a></p></details><p>编辑器下拉行为的配置选项</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> IDropIntoEditorOptions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    enabled</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    showDropSelector</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;never&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;afterDrop&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="enabled" tabindex="-1">enabled <a class="header-anchor" href="#enabled" aria-label="Permalink to &quot;enabled&quot;">​</a></h2><ul><li>类型：<code>boolean</code></li><li>描述：是否启用下拉</li></ul><h2 id="showdropselector" tabindex="-1">showDropSelector <a class="header-anchor" href="#showdropselector" aria-label="Permalink to &quot;showDropSelector&quot;">​</a></h2><ul><li>类型：<code>&quot;never&quot; | &quot;afterDrop&quot;</code></li><li>描述：控制小部件是否在放置后显示。默认为“afterDrop”。</li></ul>`,7);function c(k,E,u,_,m,b){const s=l("backTop");return r(),a("div",null,[d,o(s),h])}const I=i(p,[["render",c]]);export{D as __pageData,I as default};
