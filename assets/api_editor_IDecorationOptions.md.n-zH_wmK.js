import{_ as s,c as t,I as e,j as i,a as o,a6 as n,o as r,D as l}from"./chunks/framework.CYBeC69b.js";const y=JSON.parse('{"title":"IDecorationOptions","description":"","frontmatter":{},"headers":[],"relativePath":"api/editor/IDecorationOptions.md","filePath":"api/editor/IDecorationOptions.md","lastUpdated":1720599564000}'),h={name:"api/editor/IDecorationOptions.md"},p=i("h1",{id:"idecorationoptions",tabindex:"-1"},[o("IDecorationOptions "),i("a",{class:"header-anchor",href:"#idecorationoptions","aria-label":'Permalink to "IDecorationOptions"'},"​")],-1),c=n(`<details class="details custom-block"><summary>原文链接</summary><p><a href="https://microsoft.github.io/monaco-editor/docs.html#interfaces/editor.IDecorationOptions.html" target="_blank" rel="noreferrer">https://microsoft.github.io/monaco-editor/docs.html#interfaces/editor.IDecorationOptions.html</a></p></details><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> IDecorationOptions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    color</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ThemeColor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    darkColor</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ThemeColor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="color" tabindex="-1">color <a class="header-anchor" href="#color" aria-label="Permalink to &quot;color&quot;">​</a></h2><ul><li>类型: <code>string |</code> <a href="/api/editor/ThemeColor.html">ThemeColor</a></li><li>描述：要渲染的CSS颜色。例如：rgba（100，100，0.5）或颜色注册表中的颜色</li></ul><h2 id="darkcolor" tabindex="-1">darkColor <a class="header-anchor" href="#darkcolor" aria-label="Permalink to &quot;darkColor&quot;">​</a></h2><ul><li>类型: <code>string |</code> <a href="/api/editor/ThemeColor.html">ThemeColor</a></li><li>描述：在深色模式下要渲染的CSS颜色。例如：rgba（100，100，0.5）或颜色注册表中的颜色</li></ul>`,6);function d(k,m,g,_,u,C){const a=l("backTop");return r(),t("div",null,[p,e(a),c])}const E=s(h,[["render",d]]);export{y as __pageData,E as default};
