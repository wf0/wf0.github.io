import{_ as e,c as t,D as i,a as o,N as r,a5 as n,J as l,o as h}from"./chunks/framework.Blj2-Ajd.js";import"./chunks/theme.CmCrfLpF.js";const b=JSON.parse('{"title":"MonacoWebWorker","description":"","frontmatter":{},"headers":[],"relativePath":"api/editor/MonacoWebWorker.md","filePath":"api/editor/MonacoWebWorker.md","lastUpdated":1720599564000}'),k={name:"api/editor/MonacoWebWorker.md"};function p(d,s,c,E,g,y){const a=l("backTop");return h(),t("div",null,[s[0]||(s[0]=i("h1",{id:"monacowebworker",tabindex:"-1"},[o("MonacoWebWorker "),i("a",{class:"header-anchor",href:"#monacowebworker","aria-label":'Permalink to "MonacoWebWorker"'},"​")],-1)),r(a),s[1]||(s[1]=n(`<details class="details custom-block"><summary>原文链接</summary><p><a href="https://microsoft.github.io/monaco-editor/docs.html#interfaces/editor.MonacoWebWorker.html" target="_blank" rel="noreferrer">https://microsoft.github.io/monaco-editor/docs.html#interfaces/editor.MonacoWebWorker.html</a></p></details><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MonacoWebWorker</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    dispose</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    getProxy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Promise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    withSyncedResources</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">resources</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Promise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="dispose" tabindex="-1">dispose <a class="header-anchor" href="#dispose" aria-label="Permalink to &quot;dispose&quot;">​</a></h2><ul><li>类型: <code>dispose(): void</code></li><li>描述:终止web工作程序，从而使返回的代理无效。</li></ul><h2 id="getproxy" tabindex="-1">getProxy <a class="header-anchor" href="#getproxy" aria-label="Permalink to &quot;getProxy&quot;">​</a></h2><ul><li>类型: <code>getProxy(): Promise&lt;T&gt;</code></li><li>描述: 获取任意加载代码的代理。</li></ul><h2 id="withsyncedresources" tabindex="-1">withSyncedResources <a class="header-anchor" href="#withsyncedresources" aria-label="Permalink to &quot;withSyncedResources&quot;">​</a></h2><ul><li>类型: <code>withSyncedResources(resources): Promise&lt;T&gt;</code></li><li>描述: 将资源中的模型同步（发送）到网络工作者，使它们在 monaco.worker.getMirrorModels() 中可用。</li></ul>`,8))])}const F=e(k,[["render",p]]);export{b as __pageData,F as default};
