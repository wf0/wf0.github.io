import{_ as s,c as e,I as l,j as i,a as n,a6 as t,o as h,D as r}from"./chunks/framework.CYBeC69b.js";const L=JSON.parse('{"title":"IGlyphMarginLanesModel","description":"","frontmatter":{},"headers":[],"relativePath":"api/editor/IGlyphMarginLanesModel.md","filePath":"api/editor/IGlyphMarginLanesModel.md","lastUpdated":1720599564000}'),p={name:"api/editor/IGlyphMarginLanesModel.md"},d=i("h1",{id:"iglyphmarginlanesmodel",tabindex:"-1"},[n("IGlyphMarginLanesModel "),i("a",{class:"header-anchor",href:"#iglyphmarginlanesmodel","aria-label":'Permalink to "IGlyphMarginLanesModel"'},"​")],-1),o=t(`<details class="details custom-block"><summary>原文链接</summary><p><a href="https://microsoft.github.io/monaco-editor/docs.html#interfaces/editor.IGlyphMarginLanesModel.html" target="_blank" rel="noreferrer">https://microsoft.github.io/monaco-editor/docs.html#interfaces/editor.IGlyphMarginLanesModel.html</a></p></details><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> IGlyphMarginLanesModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    requiredLanes</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    getLanesAtLine</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">lineNumber</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> GlyphMarginLane</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[];</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    push</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">lane</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">range</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">persist</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    reset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">maxLine</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="requiredlanes" tabindex="-1">requiredLanes <a class="header-anchor" href="#requiredlanes" aria-label="Permalink to &quot;requiredLanes&quot;">​</a></h2><ul><li>类型：<code>number</code></li><li>描述：应在编辑器中渲染的车道数。</li></ul><h2 id="getlanesatline" tabindex="-1">getLanesAtLine <a class="header-anchor" href="#getlanesatline" aria-label="Permalink to &quot;getLanesAtLine&quot;">​</a></h2><ul><li>语法：<code>getLanesAtLine(lineNumber): GlyphMarginLane[]</code></li><li>参数：<code>lineNumber: number</code></li><li>返回值：<a href="/api/editor/GlyphMarginLane.html">GlyphMarginLane</a>[]</li><li>描述：获取应从给定行号开始呈现的通道。</li></ul><h2 id="push" tabindex="-1">push <a class="header-anchor" href="#push" aria-label="Permalink to &quot;push&quot;">​</a></h2><ul><li>语法：<code>push(lane, range, persist?): void</code></li><li>参数： <ul><li><code>lane</code>: <a href="/api/editor/GlyphMarginLane.html">GlyphMarginLane</a></li><li><code>range</code>: <a href="/api/Range.html">Range</a></li><li><code>persist</code>: <code>boolean</code></li></ul></li><li>描述：如果为true，请注意车道应该始终可见，即使在没有特定车道请求的线路上也是如此。</li></ul><h2 id="reset" tabindex="-1">reset <a class="header-anchor" href="#reset" aria-label="Permalink to &quot;reset&quot;">​</a></h2><ul><li>语法：<code>reset(maxLine): void</code></li><li>参数：<code>maxLine: number</code></li><li>描述：重置模型。</li></ul>`,10);function k(c,g,E,y,u,m){const a=r("backTop");return h(),e("div",null,[d,l(a),o])}const _=s(p,[["render",k]]);export{L as __pageData,_ as default};
