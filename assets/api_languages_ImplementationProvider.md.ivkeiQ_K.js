import{_ as a,c as t,I as s,j as i,a as n,a6 as l,o,D as r}from"./chunks/framework.CYBeC69b.js";const f=JSON.parse('{"title":"ImplementationProvider","description":"","frontmatter":{},"headers":[],"relativePath":"api/languages/ImplementationProvider.md","filePath":"api/languages/ImplementationProvider.md","lastUpdated":1720600471000}'),p={name:"api/languages/ImplementationProvider.md"},d=i("h1",{id:"implementationprovider",tabindex:"-1"},[n("ImplementationProvider "),i("a",{class:"header-anchor",href:"#implementationprovider","aria-label":'Permalink to "ImplementationProvider"'},"​")],-1),h=l(`<details class="details custom-block"><summary>原文链接</summary><p><a href="https://microsoft.github.io/monaco-editor/docs.html#interfaces/languages.ImplementationProvider.html" target="_blank" rel="noreferrer">https://microsoft.github.io/monaco-editor/docs.html#interfaces/languages.ImplementationProvider.html</a></p></details><p>实现提供程序接口定义了扩展和转到实现特性之间的契约。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ImplementationProvider</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    provideImplementation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">model</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">position</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">token</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ProviderResult</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Definition</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="provideimplementation" tabindex="-1">provideImplementation <a class="header-anchor" href="#provideimplementation" aria-label="Permalink to &quot;provideImplementation&quot;">​</a></h2><ul><li>语法：<code>provideImplementation(model, position, token): ProviderResult&lt;Definition&gt;</code></li><li>参数： <ul><li><code>model</code>：<a href="/api/editor/ITextModel.html">ITextModel</a></li><li><code>position</code>：<a href="/api/Position.html">Position</a></li><li><code>token</code>: <a href="/api/CancellationToken.html">CancellationToken</a></li></ul></li><li>返回值：<a href="/api/languages/ProviderResult.html">ProviderResult</a>&lt;<a href="/api/languages/Definition.html">Definition</a>&gt;</li><li>描述：在给定的位置和文件中提供符号的实现。</li></ul>`,5);function m(k,c,g,E,u,v){const e=r("backTop");return o(),t("div",null,[d,s(e),h])}const P=a(p,[["render",m]]);export{f as __pageData,P as default};
