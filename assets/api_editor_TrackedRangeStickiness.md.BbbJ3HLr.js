import{_ as t,c as n,I as r,j as e,a as o,a6 as s,o as i,D as c}from"./chunks/framework.CYBeC69b.js";const T=JSON.parse('{"title":"TrackedRangeStickiness","description":"","frontmatter":{},"headers":[],"relativePath":"api/editor/TrackedRangeStickiness.md","filePath":"api/editor/TrackedRangeStickiness.md","lastUpdated":1720599564000}'),d={name:"api/editor/TrackedRangeStickiness.md"},l=e("h1",{id:"trackedrangestickiness",tabindex:"-1"},[o("TrackedRangeStickiness "),e("a",{class:"header-anchor",href:"#trackedrangestickiness","aria-label":'Permalink to "TrackedRangeStickiness"'},"​")],-1),h=s('<details class="details custom-block"><summary>原文链接</summary><p><a href="https://microsoft.github.io/monaco-editor/docs.html#enums/editor.TrackedRangeStickiness.html" target="_blank" rel="noreferrer">https://microsoft.github.io/monaco-editor/docs.html#enums/editor.TrackedRangeStickiness.html</a></p></details><p>描述在装饰边缘附近键入/编辑时装饰的行为。注意：请不要编辑这些值，因为它们非常小心地匹配DecorationRangeBehavior</p><h2 id="alwaysgrowswhentypingatedges" tabindex="-1">AlwaysGrowsWhenTypingAtEdges <a class="header-anchor" href="#alwaysgrowswhentypingatedges" aria-label="Permalink to &quot;AlwaysGrowsWhenTypingAtEdges&quot;">​</a></h2><ul><li>值：<code>0</code></li></ul><h2 id="growsonlywhentypingafter" tabindex="-1">GrowsOnlyWhenTypingAfter <a class="header-anchor" href="#growsonlywhentypingafter" aria-label="Permalink to &quot;GrowsOnlyWhenTypingAfter&quot;">​</a></h2><ul><li>值：<code>3</code></li></ul><h2 id="growsonlywhentypingbefore" tabindex="-1">GrowsOnlyWhenTypingBefore <a class="header-anchor" href="#growsonlywhentypingbefore" aria-label="Permalink to &quot;GrowsOnlyWhenTypingBefore&quot;">​</a></h2><ul><li>值：<code>2</code></li></ul><h2 id="nevergrowswhentypingatedges" tabindex="-1">NeverGrowsWhenTypingAtEdges <a class="header-anchor" href="#nevergrowswhentypingatedges" aria-label="Permalink to &quot;NeverGrowsWhenTypingAtEdges&quot;">​</a></h2><ul><li>值：<code>1</code></li></ul>',10);function g(p,k,m,y,_,u){const a=c("backTop");return i(),n("div",null,[l,r(a),h])}const f=t(d,[["render",g]]);export{T as __pageData,f as default};
