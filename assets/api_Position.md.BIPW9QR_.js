import{c as s,I as i,j as o,a as r,a6 as a,o as c,D as e}from"./chunks/framework.CYBeC69b.js";const d=o("h1",{id:"position",tabindex:"-1"},[r("Position "),o("a",{class:"header-anchor",href:"#position","aria-label":'Permalink to "Position"'},"​")],-1),u=a('<details class="details custom-block"><summary>原文链接</summary><p><a href="https://microsoft.github.io/monaco-editor/docs.html#classes/Position.html" target="_blank" rel="noreferrer">https://microsoft.github.io/monaco-editor/docs.html#classes/Position.html</a></p></details><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Position</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(lineNumber, column): Position</span></span></code></pre></div><h2 id="快捷链接" tabindex="-1">快捷链接 <a class="header-anchor" href="#快捷链接" aria-label="Permalink to &quot;快捷链接&quot;">​</a></h2>',3),h=a('<h2 id="constructor" tabindex="-1">constructor <a class="header-anchor" href="#constructor" aria-label="Permalink to &quot;constructor&quot;">​</a></h2><ul><li>类型：<code>new Position(lineNumber, column): Position</code></li><li>参数： <ul><li><code>lineNumber</code>：<code>number</code></li><li><code>column</code>：<code>number</code></li></ul></li><li>返回值：<code>Position</code></li></ul><h2 id="column" tabindex="-1">column <a class="header-anchor" href="#column" aria-label="Permalink to &quot;column&quot;">​</a></h2><ul><li>类型：<code>number</code></li></ul><h2 id="linenumber" tabindex="-1">lineNumber <a class="header-anchor" href="#linenumber" aria-label="Permalink to &quot;lineNumber&quot;">​</a></h2><ul><li>类型：<code>number</code></li></ul><h2 id="clone" tabindex="-1">clone <a class="header-anchor" href="#clone" aria-label="Permalink to &quot;clone&quot;">​</a></h2><ul><li>类型：<code>clone(): Position</code></li><li>描述：克隆这个位置对象</li></ul><h2 id="delta" tabindex="-1">delta <a class="header-anchor" href="#delta" aria-label="Permalink to &quot;delta&quot;">​</a></h2><ul><li>类型：<code>delta(deltaLineNumber?, deltaColumn?): Position</code></li><li>参数： <ul><li><code>deltaLineNumber</code>：<code>number</code></li><li><code>deltaColumn</code>：<code>number</code></li></ul></li><li>描述：返回一个新位置对象，该对象是当前位置对象的一个偏移量。</li></ul><h2 id="equals" tabindex="-1">equals <a class="header-anchor" href="#equals" aria-label="Permalink to &quot;equals&quot;">​</a></h2><ul><li>类型：<code>equals(a: IPosition): boolean</code></li><li>参数：<a href="/api/IPosition.html">IPosition</a></li><li>描述：判断两个位置对象是否相等。</li></ul><h2 id="isbefore" tabindex="-1">isBefore <a class="header-anchor" href="#isbefore" aria-label="Permalink to &quot;isBefore&quot;">​</a></h2><ul><li>类型：<code>isBefore(a: IPosition): boolean</code></li><li>参数：<a href="/api/IPosition.html">IPosition</a></li><li>描述：判断当前位置对象是否在给定的位置对象之前。</li></ul><h2 id="isbeforeorequal" tabindex="-1">isBeforeOrEqual <a class="header-anchor" href="#isbeforeorequal" aria-label="Permalink to &quot;isBeforeOrEqual&quot;">​</a></h2><ul><li>类型：<code>isBeforeOrEqual(a: IPosition): boolean</code></li><li>参数：<a href="/api/IPosition.html">IPosition</a></li><li>描述：判断当前位置对象是否在给定的位置对象之前或相等。</li></ul><h2 id="tojson" tabindex="-1">toJSON <a class="header-anchor" href="#tojson" aria-label="Permalink to &quot;toJSON&quot;">​</a></h2><ul><li>类型：<code>toJSON(): IPosition</code></li><li>描述：返回一个 JSON 对象，该对象包含当前位置对象的行号和列号。</li></ul><h2 id="tostring" tabindex="-1">toString <a class="header-anchor" href="#tostring" aria-label="Permalink to &quot;toString&quot;">​</a></h2><ul><li>类型：<code>toString(): string</code></li><li>描述：返回一个字符串，该字符串包含当前位置对象的行号和列号。</li></ul><h2 id="with" tabindex="-1">with <a class="header-anchor" href="#with" aria-label="Permalink to &quot;with&quot;">​</a></h2><ul><li>类型：<code>with(lineNumber?: number, column?: number): Position</code></li><li>参数： <ul><li><code>lineNumber</code>：<code>number</code></li><li><code>column</code>：<code>number</code></li></ul></li><li>描述：返回一个新位置对象，该对象是当前位置对象的一个偏移量。</li></ul><h2 id="compare" tabindex="-1">compare <a class="header-anchor" href="#compare" aria-label="Permalink to &quot;compare&quot;">​</a></h2><ul><li>类型：<code>compare(a:IPosition, b:IPosition): number</code></li><li>参数：<code>a,b 均为</code><a href="/api/IPosition.html">IPosition</a></li><li>描述：比较两个位置对象，返回一个数字，表示当前位置对象和给定的位置对象之间的比较结果。</li></ul><h2 id="equals-1" tabindex="-1">equals <a class="header-anchor" href="#equals-1" aria-label="Permalink to &quot;equals&quot;">​</a></h2><ul><li>类型：<code>equals(a:IPosition, b:IPosition): boolean</code></li><li>参数：<code>a,b 均为</code><a href="/api/IPosition.html">IPosition</a></li><li>描述：比较两个位置对象，返回一个布尔值，表示当前位置对象和给定的位置对象是否相等。</li></ul><h2 id="isbefore-1" tabindex="-1">isBefore <a class="header-anchor" href="#isbefore-1" aria-label="Permalink to &quot;isBefore&quot;">​</a></h2><ul><li>类型：<code>isBefore(a:IPosition, b:IPosition): boolean</code></li><li>参数：<code>a,b 均为</code><a href="/api/IPosition.html">IPosition</a></li><li>描述：比较两个位置对象，返回一个布尔值，表示当前位置对象是否在给定的位置对象之前或相等。</li></ul><h2 id="isbeforeorequal-1" tabindex="-1">isBeforeOrEqual <a class="header-anchor" href="#isbeforeorequal-1" aria-label="Permalink to &quot;isBeforeOrEqual&quot;">​</a></h2><ul><li>类型：<code>isBeforeOrEqual(a:IPosition, b:IPosition): boolean</code></li><li>参数：<code>a,b 均为</code><a href="/api/IPosition.html">IPosition</a></li><li>描述：比较两个位置对象，返回一个布尔值，表示当前位置对象是否在给定的位置对象之前。</li></ul><h2 id="isiposition" tabindex="-1">isIPosition <a class="header-anchor" href="#isiposition" aria-label="Permalink to &quot;isIPosition&quot;">​</a></h2><ul><li>类型：<code>isIPosition(obj: any): obj is IPosition</code></li><li>描述：判断给定的对象是否是一个 IPosition 对象。</li></ul><h2 id="lift" tabindex="-1">lift <a class="header-anchor" href="#lift" aria-label="Permalink to &quot;lift&quot;">​</a></h2><ul><li>类型：<code>lift(position: IPosition): Position</code></li><li>参数：<a href="/api/IPosition.html">IPosition</a></li><li>描述：将给定的 IPosition 对象转换为 Position 对象。</li></ul>',34),p=JSON.parse('{"title":"Position","description":"","frontmatter":{},"headers":[],"relativePath":"api/Position.md","filePath":"api/Position.md","lastUpdated":1720599564000}'),b={name:"api/Position.md"},k=Object.assign(b,{setup(m){const l=[{icon:"C",link:"constructor"},{icon:"P",link:"column"},{icon:"P",link:"lineNumber"},{icon:"M",link:"clone"},{icon:"M",link:"delta"},{icon:"M",link:"equals"},{icon:"M",link:"isBefore"},{icon:"M",link:"isBeforeOrEqual"},{icon:"M",link:"toJSON"},{icon:"M",link:"toString"},{icon:"M",link:"with"},{icon:"M",link:"compare"},{icon:"M",link:"equals"},{icon:"M",link:"isBefore"},{icon:"M",link:"isBeforeOrEqual"},{icon:"M",link:"isIPosition"},{icon:"M",link:"lift"}];return(P,f)=>{const t=e("backTop"),n=e("dataItems");return c(),s("div",null,[d,i(t),u,i(n,{data:l}),h])}}});export{p as __pageData,k as default};
