import{c as o,I as a,j as i,a as n,a6 as r,o as h,ah as c,D as e}from"./chunks/framework.CYBeC69b.js";const d=i("h1",{id:"range",tabindex:"-1"},[n("Range "),i("a",{class:"header-anchor",href:"#range","aria-label":'Permalink to "Range"'},"​")],-1),g=i("details",{class:"details custom-block"},[i("summary",null,"原文链接"),i("p",null,[i("a",{href:"https://microsoft.github.io/monaco-editor/docs.html#classes/Range.html",target:"_blank",rel:"noreferrer"},"https://microsoft.github.io/monaco-editor/docs.html#classes/Range.html")])],-1),p=i("p",null,"编辑器中的范围。（startLineNumber，startColumn）<=（endLineNumber，endColumn）",-1),u=i("h2",{id:"快捷链接",tabindex:"-1"},[n("快捷链接 "),i("a",{class:"header-anchor",href:"#快捷链接","aria-label":'Permalink to "快捷链接"'},"​")],-1),k=r(`<h2 id="constructor" tabindex="-1">constructor <a class="header-anchor" href="#constructor" aria-label="Permalink to &quot;constructor&quot;">​</a></h2><ul><li>语法：<code>new Range(startLineNumber, startColumn, endLineNumber, endColumn): Range</code></li><li>参数： <ul><li><code>startLineNumber</code>: <code>number</code> 起始行号</li><li><code>startColumn</code>: <code>number</code> 起始列号</li><li><code>endLineNumber</code>: <code>number</code> 结束行号</li><li><code>endColumn</code>: <code>number</code> 结束列号</li></ul></li><li>返回值：<a href="/api/Range.html">Range</a></li></ul><h2 id="endcolumn" tabindex="-1">endColumn <a class="header-anchor" href="#endcolumn" aria-label="Permalink to &quot;endColumn&quot;">​</a></h2><ul><li>类型：<code>number</code></li><li>描述：结束列号</li></ul><h2 id="endlinenumber" tabindex="-1">endLineNumber <a class="header-anchor" href="#endlinenumber" aria-label="Permalink to &quot;endLineNumber&quot;">​</a></h2><ul><li>类型：<code>number</code></li><li>描述：结束行号</li></ul><h2 id="startcolumn" tabindex="-1">startColumn <a class="header-anchor" href="#startcolumn" aria-label="Permalink to &quot;startColumn&quot;">​</a></h2><ul><li>类型：<code>number</code></li><li>描述：起始列号</li></ul><h2 id="startlinenumber" tabindex="-1">startLineNumber <a class="header-anchor" href="#startlinenumber" aria-label="Permalink to &quot;startLineNumber&quot;">​</a></h2><ul><li>类型：<code>number</code></li><li>描述：起始行号</li></ul><h2 id="collapsetoend" tabindex="-1">collapseToEnd <a class="header-anchor" href="#collapsetoend" aria-label="Permalink to &quot;collapseToEnd&quot;">​</a></h2><ul><li>语法：<code>collapseToEnd(): Range</code></li><li>描述：使用此范围的结束位置创建一个新的空范围。</li></ul><h2 id="collapsetostart" tabindex="-1">collapseToStart <a class="header-anchor" href="#collapsetostart" aria-label="Permalink to &quot;collapseToStart&quot;">​</a></h2><ul><li>语法：<code>collapseToStart(): Range</code></li><li>描述：使用此范围的起始位置创建一个新的空范围。</li></ul><h2 id="containsposition" tabindex="-1">containsPosition <a class="header-anchor" href="#containsposition" aria-label="Permalink to &quot;containsPosition&quot;">​</a></h2><ul><li>语法：<code>containsPosition(position): boolean</code></li><li>参数：<code>position</code>: <a href="/api/IPosition.html">IPosition</a></li><li>返回值：<code>boolean</code></li><li>描述：测试位置是否在此范围内,如果位置在边缘，将返回true。</li><li>示例：</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> range</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Range</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> position</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Position</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 1,2 的光标位置在选区 [1,0]-[1,6] 中</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> result</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> range.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">containsPosition</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(position); </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(result); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span></code></pre></div><h2 id="containsrange" tabindex="-1">containsRange <a class="header-anchor" href="#containsrange" aria-label="Permalink to &quot;containsRange&quot;">​</a></h2><ul><li>语法：<code>containsRange(range): boolean</code></li><li>参数：<code>range</code>: <a href="/api/IRange.html">IRange</a></li><li>返回值：<code>boolean</code></li><li>描述：判断当前选区是否包含另一个选区。</li></ul><h2 id="delta" tabindex="-1">delta <a class="header-anchor" href="#delta" aria-label="Permalink to &quot;delta&quot;">​</a></h2><ul><li>语法：<code>delta(lineCount): Range</code></li><li>参数：<code>lineCount</code>: <code>number</code></li><li>返回值：<a href="/api/IRange.html">IRange</a></li><li>描述：将范围移动给定的行数。</li><li>示例：</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> range</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Range</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> newRange</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> range.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">delta</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">group</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Range.delta&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(range);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;执行 range.delta(3)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(newRange);</span></span></code></pre></div><img src="`+c+'"><h2 id="equalsrange" tabindex="-1">equalsRange <a class="header-anchor" href="#equalsrange" aria-label="Permalink to &quot;equalsRange&quot;">​</a></h2><ul><li>语法：<code>equalsRange(other: IRange): boolean</code></li><li>参数：<code>other</code>: <a href="/api/IRange.html">IRange</a></li><li>返回值：<code>boolean</code></li><li>描述：判断两个范围是否相等。</li></ul><h2 id="getendposition" tabindex="-1">getEndPosition <a class="header-anchor" href="#getendposition" aria-label="Permalink to &quot;getEndPosition&quot;">​</a></h2><ul><li>语法：<code>getEndPosition(): Position</code></li><li>返回值：<a href="/api/Position.html">Position</a></li><li>描述：获取范围的结束位置。</li></ul><h2 id="getstartposition" tabindex="-1">getStartPosition <a class="header-anchor" href="#getstartposition" aria-label="Permalink to &quot;getStartPosition&quot;">​</a></h2><ul><li>语法：<code>getStartPosition(): Position</code></li><li>返回值：<a href="/api/Position.html">Position</a></li><li>描述：获取范围的开始位置。</li></ul><h2 id="intersectranges" tabindex="-1">intersectRanges <a class="header-anchor" href="#intersectranges" aria-label="Permalink to &quot;intersectRanges&quot;">​</a></h2><ul><li>语法：<code>intersectRanges(range: IRange): Range</code></li><li>参数：<code>range</code>: <a href="/api/IRange.html">IRange</a></li><li>描述：获取两个范围的交集。</li></ul><h2 id="isempty" tabindex="-1">isEmpty <a class="header-anchor" href="#isempty" aria-label="Permalink to &quot;isEmpty&quot;">​</a></h2><ul><li>语法：<code>isEmpty(): boolean</code></li><li>返回值：<code>boolean</code></li><li>描述：判断当前范围是否为空。</li></ul><h2 id="plusrange" tabindex="-1">plusRange <a class="header-anchor" href="#plusrange" aria-label="Permalink to &quot;plusRange&quot;">​</a></h2><ul><li>语法：<code>plusRange(range: IRange): Range</code></li><li>参数：<code>range</code>: <a href="/api/IRange.html">IRange</a></li><li>描述：将两个范围进行合并，最小的位置将用作起点，最大的位置将用作终点。</li></ul><h2 id="setendposition" tabindex="-1">setEndPosition <a class="header-anchor" href="#setendposition" aria-label="Permalink to &quot;setEndPosition&quot;">​</a></h2><ul><li>语法：<code>setEndPosition(endLineNumber, endColumn): Range</code></li><li>参数： <ul><li><code>endLineNumber</code>: <code>number</code></li><li><code>endColumn</code>: <code>number</code></li></ul></li><li>描述：设置范围的结束位置。</li></ul><h2 id="setstartposition" tabindex="-1">setStartPosition <a class="header-anchor" href="#setstartposition" aria-label="Permalink to &quot;setStartPosition&quot;">​</a></h2><ul><li>语法：<code>setStartPosition(startLineNumber, startColumn): Range</code></li><li>参数： <ul><li><code>startLineNumber</code>: <code>number</code></li><li><code>startColumn</code>: <code>number</code></li></ul></li><li>描述：设置范围的开始位置。</li></ul><h2 id="strictcontainsrange" tabindex="-1">strictContainsRange <a class="header-anchor" href="#strictcontainsrange" aria-label="Permalink to &quot;strictContainsRange&quot;">​</a></h2><ul><li>语法：<code>strictContainsRange(range: IRange): boolean</code></li><li>参数：<code>range</code>: <a href="/api/IRange.html">IRange</a></li><li>返回值：<code>boolean</code></li><li>描述：测试范围是否严格在此范围内,范围必须在此范围之后开始，在此范围之前结束，结果才能为true。</li></ul><h2 id="tojson" tabindex="-1">toJSON <a class="header-anchor" href="#tojson" aria-label="Permalink to &quot;toJSON&quot;">​</a></h2><ul><li>语法：<code>toJSON(): IRange</code></li><li>返回值：<a href="/api/IRange.html">IRange</a></li><li>描述：将范围转换为 JSON 格式。</li></ul><h2 id="tostring" tabindex="-1">toString <a class="header-anchor" href="#tostring" aria-label="Permalink to &quot;toString&quot;">​</a></h2><ul><li>语法：<code>toString(): string</code></li><li>返回值：<code>string</code></li><li>描述：将范围转换为字符串。</li></ul><h2 id="areintersecting" tabindex="-1">areIntersecting <a class="header-anchor" href="#areintersecting" aria-label="Permalink to &quot;areIntersecting&quot;">​</a></h2><ul><li>语法：<code>areIntersecting(a: IRange, b: IRange): boolean</code></li><li>参数： <ul><li><code>a</code>: <a href="/api/IRange.html">IRange</a></li><li><code>b</code>: <a href="/api/IRange.html">IRange</a></li></ul></li><li>描述：测试两个范围是否相交。</li></ul><h2 id="areintersectingortouching" tabindex="-1">areIntersectingOrTouching <a class="header-anchor" href="#areintersectingortouching" aria-label="Permalink to &quot;areIntersectingOrTouching&quot;">​</a></h2><ul><li>语法：<code>areIntersectingOrTouching(a: IRange, b: IRange): boolean</code></li><li>参数： <ul><li><code>a</code>: <a href="/api/IRange.html">IRange</a></li><li><code>b</code>: <a href="/api/IRange.html">IRange</a></li></ul></li><li>描述：测试两个范围是否相交或相邻。</li></ul><h2 id="collapsetoend-1" tabindex="-1">collapseToEnd <a class="header-anchor" href="#collapsetoend-1" aria-label="Permalink to &quot;collapseToEnd&quot;">​</a></h2><ul><li>语法：<code>collapseToEnd(range): Range</code></li><li>参数：<code>range</code>: <a href="/api/IRange.html">IRange</a></li><li>描述：使用此范围的结束位置创建一个新的空范围。</li></ul><h2 id="collapsetostart-1" tabindex="-1">collapseToStart <a class="header-anchor" href="#collapsetostart-1" aria-label="Permalink to &quot;collapseToStart&quot;">​</a></h2><ul><li>语法：<code>collapseToStart(range): Range</code></li><li>参数：<code>range</code>: <a href="/api/IRange.html">IRange</a></li><li>描述：使用此范围的起始位置创建一个新的空范围。</li></ul><h2 id="comparerangesusingends" tabindex="-1">compareRangesUsingEnds <a class="header-anchor" href="#comparerangesusingends" aria-label="Permalink to &quot;compareRangesUsingEnds&quot;">​</a></h2><ul><li>语法：<code>compareRangesUsingEnds(a: IRange, b: IRange): number</code></li><li>参数： <ul><li><code>a</code>: <a href="/api/IRange.html">IRange</a></li><li><code>b</code>: <a href="/api/IRange.html">IRange</a></li></ul></li><li>返回值：<code>number</code></li><li>描述：一个比较范围的函数，用于对范围进行排序。它将首先比较endPosition上的范围，然后比较startPosition上的。</li></ul><h2 id="comparerangesusingstarts" tabindex="-1">compareRangesUsingStarts <a class="header-anchor" href="#comparerangesusingstarts" aria-label="Permalink to &quot;compareRangesUsingStarts&quot;">​</a></h2><ul><li>语法：<code>compareRangesUsingStarts(a: IRange, b: IRange): number</code></li><li>参数： <ul><li><code>a</code>: <a href="/api/IRange.html">IRange</a></li><li><code>b</code>: <a href="/api/IRange.html">IRange</a></li></ul></li><li>返回值：<code>number</code></li><li>描述：一个比较范围的函数，用于对范围进行排序。它将首先比较startPosition上的范围，然后比较endPosition上的。</li></ul><h2 id="containsposition-1" tabindex="-1">containsPosition <a class="header-anchor" href="#containsposition-1" aria-label="Permalink to &quot;containsPosition&quot;">​</a></h2><ul><li>语法：<code>containsPosition(range, position): boolean</code></li><li>参数： <ul><li><code>range</code>: <a href="/api/IRange.html">IRange</a></li><li><code>position</code>: <a href="/api/IPosition.html">IPosition</a></li></ul></li><li>描述：测试位置是否在此范围内,如果位置在边缘，将返回true。</li></ul><h2 id="containsrange-1" tabindex="-1">containsRange <a class="header-anchor" href="#containsrange-1" aria-label="Permalink to &quot;containsRange&quot;">​</a></h2><ul><li>语法：<code>containsRange(range, otherRange): boolean</code></li><li>参数： <ul><li><code>range</code>: <a href="/api/IRange.html">IRange</a></li><li><code>otherRange</code>: <a href="/api/IRange.html">IRange</a></li></ul></li><li>描述：判断当前选区是否包含另一个选区。</li></ul><h2 id="equalsrange-1" tabindex="-1">equalsRange <a class="header-anchor" href="#equalsrange-1" aria-label="Permalink to &quot;equalsRange&quot;">​</a></h2><ul><li>语法：<code>equalsRange(a,b): boolean</code></li><li>参数： <ul><li><code>a</code>: <a href="/api/IRange.html">IRange</a></li><li><code>b</code>: <a href="/api/IRange.html">IRange</a></li></ul></li><li>描述：判断两个范围是否相等。</li></ul><h2 id="frompositions" tabindex="-1">fromPositions <a class="header-anchor" href="#frompositions" aria-label="Permalink to &quot;fromPositions&quot;">​</a></h2><ul><li>语法：<code>fromPositions(start: IPosition, end: IPosition): Range</code></li><li>参数： <ul><li><code>start</code>: <a href="/api/IPosition.html">IPosition</a></li><li><code>end</code>: <a href="/api/IPosition.html">IPosition</a></li></ul></li><li>描述：创建一个范围，其开始位置和结束位置都是指定的位置。</li></ul><h2 id="getendposition-1" tabindex="-1">getEndPosition <a class="header-anchor" href="#getendposition-1" aria-label="Permalink to &quot;getEndPosition&quot;">​</a></h2><ul><li>语法：<code>getEndPosition(range): Position</code></li><li>参数：<code>range</code>: <a href="/api/IRange.html">IRange</a></li><li>描述：获取范围的结束位置。</li></ul><h2 id="getstartposition-1" tabindex="-1">getStartPosition <a class="header-anchor" href="#getstartposition-1" aria-label="Permalink to &quot;getStartPosition&quot;">​</a></h2><ul><li>语法：<code>getStartPosition(range): Position</code></li><li>参数：<code>range</code>: <a href="/api/IRange.html">IRange</a></li><li>描述：获取范围的开始位置。</li></ul><h2 id="intersectranges-1" tabindex="-1">intersectRanges <a class="header-anchor" href="#intersectranges-1" aria-label="Permalink to &quot;intersectRanges&quot;">​</a></h2><ul><li>语法：<code>intersectRanges(a: IRange, b: IRange): Range</code></li><li>参数： <ul><li><code>a</code>: <a href="/api/IRange.html">IRange</a></li><li><code>b</code>: <a href="/api/IRange.html">IRange</a></li></ul></li><li>描述：获取两个范围的交集。</li></ul><h2 id="isempty-1" tabindex="-1">isEmpty <a class="header-anchor" href="#isempty-1" aria-label="Permalink to &quot;isEmpty&quot;">​</a></h2><ul><li>语法：<code>isEmpty(range): boolean</code></li><li>参数：<code>range</code>: <a href="/api/IRange.html">IRange</a></li><li>描述：判断当前范围是否为空。</li></ul><h2 id="isirange" tabindex="-1">isIRange <a class="header-anchor" href="#isirange" aria-label="Permalink to &quot;isIRange&quot;">​</a></h2><ul><li>语法：<code>isIRange(obj): boolean</code></li><li>参数：<code>obj</code>: any</li><li>描述：判断对象是否为IRange。</li></ul><h2 id="lift" tabindex="-1">lift <a class="header-anchor" href="#lift" aria-label="Permalink to &quot;lift&quot;">​</a></h2><ul><li>语法：<code>lift(range: IRange): Range|null</code></li><li>参数：<code>range</code>: <a href="/api/IRange.html">IRange</a></li><li>描述：将范围转换为Range。</li></ul><h2 id="plusrange-1" tabindex="-1">plusRange <a class="header-anchor" href="#plusrange-1" aria-label="Permalink to &quot;plusRange&quot;">​</a></h2><ul><li>语法：<code>plusRange(a: IRange, b: IRange): Range</code></li><li>参数： <ul><li><code>a</code>: <a href="/api/IRange.html">IRange</a></li><li><code>b</code>: <a href="/api/IRange.html">IRange</a></li></ul></li><li>描述：将两个范围进行合并，最小的位置将用作起点，最大的位置将用作终点。</li></ul><h2 id="spansmultiplelines" tabindex="-1">spansMultipleLines <a class="header-anchor" href="#spansmultiplelines" aria-label="Permalink to &quot;spansMultipleLines&quot;">​</a></h2><ul><li>语法：<code>spansMultipleLines(range): boolean</code></li><li>参数：<code>range</code>: <a href="/api/IRange.html">IRange</a></li><li>描述：测试范围是否跨多行。</li></ul><h2 id="strictcontainsrange-1" tabindex="-1">strictContainsRange <a class="header-anchor" href="#strictcontainsrange-1" aria-label="Permalink to &quot;strictContainsRange&quot;">​</a></h2><ul><li>语法：<code>strictContainsRange(a: IRange, b: IRange): boolean</code></li><li>参数： <ul><li><code>a</code>: <a href="/api/IRange.html">IRange</a></li><li><code>b</code>: <a href="/api/IRange.html">IRange</a></li></ul></li><li>描述：测试范围是否严格在此范围内,范围必须在此范围之后开始，在此范围之前结束，结果才能为true。</li></ul>',83),P=JSON.parse('{"title":"Range","description":"","frontmatter":{},"headers":[],"relativePath":"api/Range.md","filePath":"api/Range.md","lastUpdated":1720599564000}'),m={name:"api/Range.md"},f=Object.assign(m,{setup(b){const l=[{icon:"C",link:"constructor"},{icon:"P",link:"endColumn"},{icon:"P",link:"endLineNumber"},{icon:"P",link:"startColumn"},{icon:"P",link:"startLineNumber"},{icon:"M",link:"collapseToEnd"},{icon:"M",link:"collapseToStart"},{icon:"M",link:"containsPosition"},{icon:"M",link:"containsRange"},{icon:"M",link:"delta"},{icon:"M",link:"equalsRange"},{icon:"M",link:"getEndPosition"},{icon:"M",link:"getStartPosition"},{icon:"M",link:"intersectRanges"},{icon:"M",link:"isEmpty"},{icon:"M",link:"plusRange"},{icon:"M",link:"setEndPosition"},{icon:"M",link:"setStartPosition"},{icon:"M",link:"strictContainsRange"},{icon:"M",link:"toJSON"},{icon:"M",link:"toString"},{icon:"M",link:"areIntersecting"},{icon:"M",link:"areIntersectingOrTouching"},{icon:"M",link:"collapseToEnd"},{icon:"M",link:"collapseToStart"},{icon:"M",link:"compareRangesUsingEnds"},{icon:"M",link:"compareRangesUsingStarts"},{icon:"M",link:"containsPosition"},{icon:"M",link:"containsRange"},{icon:"M",link:"equalsRange"},{icon:"M",link:"fromPositions"},{icon:"M",link:"getEndPosition"},{icon:"M",link:"getStartPosition"},{icon:"M",link:"intersectRanges"},{icon:"M",link:"isEmpty"},{icon:"M",link:"isIRange"},{icon:"M",link:"lift"},{icon:"M",link:"plusRange"},{icon:"M",link:"spansMultipleLines"},{icon:"M",link:"strictContainsRange"}];return(R,E)=>{const s=e("backTop"),t=e("dataItems");return h(),o("div",null,[d,a(s),g,p,u,a(t,{data:l}),k])}}});export{P as __pageData,f as default};
